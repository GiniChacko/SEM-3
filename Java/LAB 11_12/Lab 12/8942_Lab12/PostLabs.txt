/* NAME : GINI CHACKO
 * ROLL : 8942
 * CLASS : SE COMPS B
 * BATCH : B
 */
 
-------------------------------------------------------------------------------------------------------

	Q1. Learn Class Diagram of JDBC API and write the interfaces in jdbc api.a
	
	Ans :
	Driver Manager - This class manages the JDBC drivers. You need to register your drivers to this.
	                 It provides methods such as registerDriver() and getConnection().
	                 
	Driver         - This interface is the Base interface for every driver class i.e. If you want to 
	                 create a JDBC Driver of your own you need to implement this interface. If you
	                 load a Diver class (implementation of this interface), it will create an instance
	                 of itself and register with the driver manager.
	                 
	Statement      - This interface represents a static SQL statement. Using the Statement object and 
	                 its methods, you can execute an SQL statement and get the results  of it.
	                 It provides methods such as execute(), executeBatch(), executeUpdate(),etc.
	                 to execute the statements.
	                 
	Prepared       - This represents a pre-compiled SQL statement. An SQL statement is compiled and
	Statement        stored in a prepared statement and you can later execute this multiple times.
	                 You can get an object of this interface using the method of the Connection
	                 interface named preparedStement(). This provides methods such as executeQuery(),
	                 executeUpdate(), and execute() to execute the prepared statements and getXXX(),
	                 setXXX() (where XXX is the data types such as long int float etc..) methods to set 
	                 and get the values of the bind variables of the prepared statement.    
	                 
	Callable       - Using an object of this interface you can execute the stored procedures. This 
	Statement        returns single or multiple results. It will accept input parameters too. You
	                 can create a CallableStatement using the prepareCall() method of the Connection
	                 interface. Just like Prepared statement, this will also provide setXXX() and getXXX()
	                 methods to pass the input parameters and to get the output parameters of the procedures.
	                 
	Connection     - This interface represents the connection with a specific database. SQL statements are 
	                 executed in the context of a connection. This interface provides methods such as close(),
	                 commit(), rollback(), createStatement(), prepareCall(), prepareStatement(), 
	                 setAutoCommit(), setSavepoint(),etc.
	                 
    ResultSet      - This interface represents the database result set, a table which is generated by 
                     executing statements. This interface provides getter and update methods to retrieve
                     and update its contents respectively.
                     
    ResultSet      - This interface is used to get the information about the result set such as, number
    MetaData         of columns, name of the column, data type of the column, schema of the result set, 
                     table name, etc. It provides methods such as getColumnCount(), getColumnName(),
                     getColumnType(), getTableName(), getSchemaName(), etc.
                                                                 
-------------------------------------------------------------------------------------------------------------

	Q2. What is difference between Statement and PreparedStatement in jdbc API.
	
	Ans : 
	---------------------------------------------------------------------------------------------------
                 STATEMENT                                            	PREPAREDSTATEMENT
    ---------------------------------------------------------------------------------------------------             
	1.]It is used when SQL query is to be                  1.]It is used when SQL query is to be 
	 executed only once.	                                  executed multiple times.
	 
	2.]You can not pass parameters at runtime.	           2.]You can pass parameters at runtime.
	
	3.]Used for CREATE, ALTER, DROP statements.	           3.]Used for the queries which are to be 
	                                                          executed multiple times.
	                                                          
	4.]Performance is very low.	                           4.]Performance is better than Statement.
	
	5.]It is base interface.	                           5.]It extends statement interface.
	
	6.]Used to execute normal SQL queries.	               6.]Used to execute dynamic SQL queries.
	
	7.]We can not used statement for reading               7.]We can used Preparedstatement for reading 
	   binary data.                                           binary data.
	   
	8.]It is used for DDL statements.	                   8.]It is used for any SQL Query.
	
	9.]We can not used statement for writing 	           9.]We can used Preparedstatement for writing 
	   binary data.                                           binary data.
	   
	10.]No binary protocol is used for communication.	   10.]Binary protocol is used for communication.
	
	-------------------------------------------------------------------------------------------------------
	Q3. Describe 10 Important Methods of jdbc API.
	
	Ans : 
	
	1.]Driver interface - The interface that every driver class must implement.
	
	2.]Connection interface - A connection (session) with a specific database.
	
	3.]Statement interface - The object used for executing a static SQL statement 
	                         and returning the results it produces.
	
	4.]PreparedStatement interface - An object that represents a precompiled SQL statement.
	
	5.]CallableStatement interface - The interface used to execute SQL stored procedures.
	
	6.]ResultSet interface - A table of data representing a database result set, which
	                         is usually generated by executing a statement that queries the database.
	
	7.]ResultSetMetaData interface - An object that can be used to get information about the types 
	                                 and properties of the columns in a ResultSet object.
	
	8.]DatabaseMetaData interface - Comprehensive information about the database as a whole.
	
	9.]Struct interface - The standard mapping in the Java programming language for an SQL structured type.
	
	10.]Array interface - The mapping in the Java programming language for the SQL type ARRAY.
	
	---------------------------------------------------------------------------------------------------------