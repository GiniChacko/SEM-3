/**
 * NAME : GINI CHACKO
 * CLASS : SE COMPS B
 * ROLL : 8942
 */
------------------------------------------------------------------------- 

1.] Explain method overloading and different cases of method overloading.

	a.)Method Overloading is a feature that allows a class to have more than 
	   one method having the same name, if their argument lists are different.
	   
	b.)If a class has multiple methods having same name but different in parameters,
	   it is known as Method Overloading.If we have to perform only one operation,
	   having same name of the methods increases the readability of the program. 
	   Hence, Method overloading increases the readability of the program.
	   
	c.)Different cases of method overloading are :
	   1. By changing number of arguments
	   2. By changing the data type of parameters
	   3. By changing the order of parameters
	   
	d.)1. By changing number of arguments :
	   In this example, we have created two methods, first add() method performs
	   addition of two numbers and second add method performs addition of three numbers.
	   add(int, int)
	   add(int, int, int)
	   
	e.)2. By changing the data type of parameters
	   In this example, we have created two methods that differs in data type. The first
	   add method receives two integer arguments and second add method receives two double arguments.
	   add(int, int)
	   add(double, double)
	   
	f.)3. By changing the order of parameters
	   Both the methods have different sequence of data type in argument list. First method is having 
	   argument list as (int,float) and second is having (float,int). Since the sequence is different,
	   the method can be overloaded without any issues.
	   add(int, float)
	   add(float, int)
----------------------------------------------------------------------------------------------------------	

4.] Find the mistakes in given lab documentation and suggest.
    
    The concept of inheritence can be used as the aim of inheritance is to provide the reusability of code 
    so that a class has to write only the unique features and rest of the common properties and
    functionalities can be extended from the another class. 
-----------------------------------------------------------------------------------------------------------    
 